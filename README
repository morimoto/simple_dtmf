============== -*- outline -*- ==============

                 simple DTMF

2022/09/28	Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
=============================================

* What is this ?

	simple DTMF will
		1) create  DTMF tone wav file
		2) analyze DTMF tone wav file

	This simple DTMF have been created to create sound auto test script.

* Compile

	> cp src/sample.config .config
	> make

* Cross Compile

	Add CROSS_COMPILE on .config.
	Enables EXTR (= -static) on it if you want to statically linked binary.

* create DTMF tone wav file

	simple DTMF will create DTMF tone wav file (0.wav - 9.wav) to indicated dir.
	It doesn't mind "ABCD*#".

		simple_dtmf [orcsv]

		-o : create nums (0123456789 or _)
		-r : rate
		-c : chan
		-s : samples
		-v : verbose print

	Each channels will have DTMF tone.

	ex)
		> simple_dtmf -c 2 -o 98765
		98.wav
		76.wav

	98.wav has "tone 9" on 1ch, "tone 8" on 2ch
	76.wav has "tone 7" on 1ch, "tone 6" on 2ch
	"5" will be ignored because of -c 2

	ex)
		> simple_dtmf -c 2 -o 9_
		9_.wav

	9_.wav has "tone 9" on 2ch, "zero data" on 2ch.

	* Note *
	It can't analyze 9_.wav, because it can't distinguish between "noise" and "continued zero data".
	You need to use -v option for analyze "no data" file.

** by "sox" command

	You can create DTMF sound via "sox" command too.

		> sudo apt install sox

	create "3", by 1ch

		> sox -n -r 8000 -b 16 -c 1 sox_3.wav synth 1 sine 697 sine 1477 vol 0.5
		> ls
		sox_3.wav

		> simple_dtmf -i sox_3.wav
		3

	create "23", by 2ch
		> sox -n -r 8000 -b 16 -c 1 sox_2.wav synth 1 sine 697 sine 1336 vol 0.5
		> sox -n -r 8000 -b 16 -c 1 sox_3.wav synth 1 sine 697 sine 1477 vol 0.5
		> ls
		sox_2.wav  sox_3.wav

		> sox -M sox_2.wav sox_3.wav sox_23.wav remix 1 2
		> ls
		sox_2.wav  sox_3.wav  sox_23.wav

		> ./simple_dtmf -i sox_23.wav
		23

* analyze DTMF tone wav file

	simple DTMF will analyze input wav file.
	It doesn't mind "ABCD*#".

		simple_dtmf [i]

		-i : input file
		-v : verbose print

	It will indicate each channels DTMF analyze result.

	> simple_dtmf -i 48000_2ch/9.wav
	99

	Because it is supporting 16bit data only,
	you need to indicate it when recording.

	> arecord -t wav -r 48000 -c 2 -f S16 xxx.wav
	                               ^^^^^^

* wav info

	simple DTMF will indicate wav file info.

	> simple_dtmf -l 48k_2ch_16bit.wav
	chan:2
	rate:48000
	bit :16

* Sample Test

	You can find sample test at ./script/sample-test-xxx.sh
